//apply plugin: 'net.corda.plugins.cordapp'
//apply plugin: 'net.corda.plugins.quasar-utils'
plugins {
    id "net.corda.plugins.cordapp"
    id "net.corda.plugins.quasar-utils"
}
cordapp {
    targetPlatformVersion 6
    minimumPlatformVersion 4
    workflow {
        name "Template Flows"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

//sourceSets {
//    integrationTest {
//        kotlin {
//            compileClasspath += main.output + test.output
//            runtimeClasspath += main.output + test.output
//            srcDir file('src/integrationTest/kotlin')
//        }
//    }
//}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.71"
    testCompile "org.jetbrains.kotlin:kotlin-test:1.2.71"

    // Corda dependencies.
    cordaCompile "net.corda:corda-core:$corda_release_version"
    cordaRuntime "net.corda:corda:$corda_release_version"

    testCompile "net.corda:corda-node-driver:$corda_release_version"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    // CorDapp dependencies.
    cordapp project(":contracts")
}

test {
    useJUnitPlatform()
}

//task integrationTest(type: Test, dependsOn: []) {
//    testClassesDirs = sourceSets.integrationTest.output.classesDirs
//    classpath = sourceSets.integrationTest.runtimeClasspath
//}